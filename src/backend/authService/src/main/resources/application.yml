server:
  port: ${BACKEND_AUTH_SERVICE_PORT_INT}
#  ssl:
#    key-store: /${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}
#    key-store-password: ${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_PASSWORD}
#    keyStoreType: PKCS12
#    keyAlias: ${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_ALIAS}
#    trust-store: /${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}
#    trust-store-password: ${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_PASSWORD}

spring:
  profiles:
    active: dev
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_AUTH_SERVICE_HOSTNAME}:${DB_AUTH_SERVICE_PORT_INT}/${DB_AUTH_SERVICE_DB}
    username: ${DB_AUTH_SERVICE_USER}
    password: ${DB_AUTH_SERVICE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
  mvc:
    servlet:
      load-on-startup: 1
  rabbitmq:
    host: ${BACKEND_MESSAGE_BROKER_SERVICE_IP_INT}
    port: ${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}
    username: ${BACKEND_MESSAGE_BROKER_SERVICE_USERNAME}
    password: ${BACKEND_MESSAGE_BROKER_SERVICE_PWD}
    virtual-host: /

springdoc:
  api-docs:
    path: /api/v1/docs/info
  swagger-ui:
    path: /api/v1/docs/swagger
    default-models-expand-depth: -1
    operations-sorter: method

security:
  services:
    sharedkey: ${SECURITY_SERVICES_SHARED_KEY}
  jwt:
    secretkey: ${SECURITY_JWT_SECRET_KEY}
    claim:
      roles: ${SECURITY_JWT_CLAIMS_KEY_ROLES}
    duration:
      minutes: 1
# logging.level.com.example.authservice: INFO
