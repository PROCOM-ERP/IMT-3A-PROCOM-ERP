{
  "openapi": "3.0.1",
  "info": {
    "title": "DirectoryService",
    "description": "Service to register employees contact information as a directory.",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://localhost:8041",
      "description": "API Gateway access URL"
    }
  ],
  "tags": [
    {
      "name": "hello"
    },
    {
      "name": "addresses"
    },
    {
      "name": "organisations"
    },
    {
      "name": "employees"
    },
    {
      "name": "roles"
    }
  ],
  "paths": {
    "/api/directory/v1/roles/{role}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve one role permissions and activation status",
        "description": "Retrieve one role permissions and activation status, by providing its name.<br>Only available for admins.",
        "operationId": "getRolebyName",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "Role information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "Update a role permissions and / or activation status",
        "description": "Update a role permissions and / or activation status, by providing a list of active ones.<br>Previous ones will be deleted.<br>Only available for admins.",
        "operationId": "updateRoleByName",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Permissions : retrieve a role information for the microservice, to know which one are available.<br>isEnable : provide a boolean to modify value (can be null to keep current value).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "204": {
            "description": "Role permissions and / or activation status updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/employees/{idEmployee}": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Retrieve one employee information",
        "description": "Retrieve one employee information, by providing its id.",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "idEmployee",
            "in": "path",
            "description": "The employee username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "employees"
        ],
        "summary": "Update an employee information",
        "description": "Update an employee information, by providing the new one.",
        "operationId": "updateEmployeeById",
        "parameters": [
          {
            "name": "idEmployee",
            "in": "path",
            "description": "The employee username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Employee information updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>OrgUnit : retrieve organisations information (organisations section) to know which one are available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/employees": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Retrieve all employees information",
        "description": "Retrieve all employees information.",
        "operationId": "getAllEmployees",
        "responses": {
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "Employees information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "employees"
        ],
        "summary": "Create a new employee",
        "description": "Create a new employee by providing personal contact information (see body type).<br>Information about it are available in URI given in the response header location.",
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>OrgUnit : retrieve organisations (organisations section) to know which one are available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "201": {
            "description": "Employee created correctly",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/directory/v1/addresses": {
      "get": {
        "tags": [
          "addresses"
        ],
        "summary": "Retrieve all addresses information",
        "description": "Retrieve all addresses information.",
        "operationId": "getAllAddresses",
        "responses": {
          "200": {
            "description": "Addresses information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "addresses"
        ],
        "summary": "Create a new address",
        "description": "Create a new address by providing location information (see body type).<br>Only available for admins.",
        "operationId": "createAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "201": {
            "description": "Address created correctly",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve all roles",
        "description": "Retrieve all roles.<br>Only available for admins.",
        "operationId": "getAllRoles",
        "responses": {
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "Roles information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleActivationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/roles/{role}/activation": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve one role activation status for a microservice",
        "description": "Retrieve one role activation status for a microservice, by providing its name.<br>Only available for admins.",
        "operationId": "getRoleActivationByName",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Role activation status not found for role provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "Role activation status retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleActivationResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/organisations": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Retrieve all organisations information",
        "description": "Retrieve all organisations information.",
        "operationId": "getAllOrganisations",
        "responses": {
          "200": {
            "description": "Organisations information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/hello": {
      "get": {
        "tags": [
          "hello"
        ],
        "summary": "GET Hello World !",
        "description": "GET Hello World ! from Directory Service",
        "operationId": "getHello",
        "responses": {
          "200": {
            "description": "Hello World message retrieved correctly",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/directory/v1/employees/{idEmployee}/email": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Retrieve one employee email",
        "description": "Retrieve one employee email, by providing its id.",
        "operationId": "getEmployeeEmailById",
        "parameters": [
          {
            "name": "idEmployee",
            "in": "path",
            "description": "The employee username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpStatusErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "Employee email retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeEmailResponseDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RoleUpdateRequestDto": {
        "required": [
          "isEnable",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HttpStatusErrorDto": {
        "required": [
          "fields",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "EmployeeUpdateRequestDto": {
        "required": [
          "email",
          "firstName",
          "job",
          "lastName",
          "orgUnit",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^'?[\\p{L}](['\\.\\-]? ?[\\p{L}])*['\\.]?$",
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^'?[\\p{L}](['\\.\\-]? ?[\\p{L}])*['\\.]?$",
            "type": "string"
          },
          "email": {
            "maxLength": 320,
            "minLength": 3,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 24,
            "minLength": 2,
            "pattern": "^\\+?[0-9]{1,3}[\\- ]?([0-9]{1,4}[\\- ]?)*[0-9]{1,4}$",
            "type": "string"
          },
          "job": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([\\p{L}]'?[\\p{L}]+ ?)*[\\p{L}]$",
            "type": "string"
          },
          "orgUnit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeCreationRequestDto": {
        "required": [
          "email",
          "firstName",
          "id",
          "job",
          "lastName",
          "orgUnit",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[A-Z][0-9]{5}$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^'?[\\p{L}](['\\.\\-]? ?[\\p{L}])*['\\.]?$",
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^'?[\\p{L}](['\\.\\-]? ?[\\p{L}])*['\\.]?$",
            "type": "string"
          },
          "email": {
            "maxLength": 320,
            "minLength": 3,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 24,
            "minLength": 2,
            "pattern": "^\\+?[0-9]{1,3}[\\- ]?([0-9]{1,4}[\\- ]?)*[0-9]{1,4}$",
            "type": "string"
          },
          "job": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([\\p{L}]'?[\\p{L}]+ ?)*[\\p{L}]$",
            "type": "string"
          },
          "orgUnit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressCreationRequestDto": {
        "required": [
          "city",
          "country",
          "number",
          "street",
          "zipcode"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "zipcode": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        }
      },
      "RoleActivationResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "microservice": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      },
      "RoleResponseDto": {
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        }
      },
      "OrgUnitResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "OrganisationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "orgUnits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUnitResponseDto"
            }
          }
        }
      },
      "AddressResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        }
      },
      "EmployeeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/OrgUnitEmployeeResponseDto"
          },
          "organisation": {
            "$ref": "#/components/schemas/OrganisationEmployeeResponseDto"
          }
        }
      },
      "ManagerResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "OrgUnitEmployeeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressResponseDto"
          },
          "manager": {
            "$ref": "#/components/schemas/ManagerResponseDto"
          }
        }
      },
      "OrganisationEmployeeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "EmployeeEmailResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    }
  }
}