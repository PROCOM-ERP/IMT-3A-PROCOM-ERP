{
  "openapi": "3.0.1",
  "info": {
    "title": "DirectoryService",
    "version": "0.0.1-SNAPSHOT"
  },
  "servers": [
    {
      "url": "https://localhost:8041",
      "description": "Gateway access URL"
    }
  ],
  "tags": [
    {
      "name": "hello"
    },
    {
      "name": "roles"
    },
    {
      "name": "permissions"
    }
  ],
  "paths": {
    "/api/dir/v1/services": {
      "get": {
        "tags": [
          "service-controller"
        ],
        "operationId": "getAllServices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service-controller"
        ],
        "operationId": "createService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve all roles information",
        "description": "Retrieve all roles information.<br>Only available for admins.",
        "operationId": "getAllRoles",
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Roles information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Create a new role",
        "description": "Create a new role by providing its name and permissions.<br>Information about it are available in URI given in the response header location.<br>Only available for admins.",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Role created correctly",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Name : 32 charactersPermissions : retrieve permissions information (permissions section) to know which one are available",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/dir/v1/organisations": {
      "get": {
        "tags": [
          "organisation-controller"
        ],
        "operationId": "getAllOrganisations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organisation-controller"
        ],
        "operationId": "createOrganisation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/employees": {
      "get": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "getAllEmployees",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "createEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/addresses": {
      "get": {
        "tags": [
          "address-controller"
        ],
        "operationId": "getAllAddresses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "address-controller"
        ],
        "operationId": "createAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/services/{idService}/organisation": {
      "patch": {
        "tags": [
          "service-controller"
        ],
        "operationId": "updateServiceOrganisation",
        "parameters": [
          {
            "name": "idService",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/services/{idService}/address": {
      "patch": {
        "tags": [
          "service-controller"
        ],
        "operationId": "updateServiceAddress",
        "parameters": [
          {
            "name": "idService",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/roles/{role}/permissions": {
      "patch": {
        "tags": [
          "roles"
        ],
        "summary": "Update a role permissions",
        "description": "Update a role permissions, by providing a list of all the new ones.<br>Previous ones will be deleted.<br>Only available for admins.",
        "operationId": "updateRolePermissions",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Permissions : retrieve permissions information (permissions section) to know which one are available",
            "content": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Role permissions updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/dir/v1/roles/{role}/enable": {
      "patch": {
        "tags": [
          "roles"
        ],
        "summary": "Enable or disable a role",
        "description": "Enable or disable a role, by providing a new enable value (true or false).<br>Only available for admins.",
        "operationId": "updateRoleEnable",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Role enable attribute updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/dir/v1/organisations/{idOrName}/address": {
      "patch": {
        "tags": [
          "organisation-controller"
        ],
        "operationId": "updateOrganisationAddressById",
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/employees/{idOrEmail}/service": {
      "patch": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "updateEmployeeService",
        "parameters": [
          {
            "name": "idOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/employees/{idOrEmail}/info": {
      "patch": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "updateEmployeeInfo",
        "parameters": [
          {
            "name": "idOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequestInfoDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/employees/{idOrEmail}/enable": {
      "patch": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "updateEmployeeEnable",
        "parameters": [
          {
            "name": "idOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/services/{idService}": {
      "get": {
        "tags": [
          "service-controller"
        ],
        "operationId": "getService",
        "parameters": [
          {
            "name": "idService",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service-controller"
        ],
        "operationId": "deleteService",
        "parameters": [
          {
            "name": "idService",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/roles/{role}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve one role information",
        "description": "Retrieve one role information, by providing its name.<br>Only available for admins.",
        "operationId": "getRole",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Role information retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "summary": "Retrieve all permission values",
        "description": "Retrieve all permission valus.<br>Only available for admins.",
        "operationId": "getAllPermissions",
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Permission values retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/dir/v1/organisations/{idOrName}": {
      "get": {
        "tags": [
          "organisation-controller"
        ],
        "operationId": "getOrganisationById",
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organisation-controller"
        ],
        "operationId": "deleteOrganisationById",
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/hello": {
      "get": {
        "tags": [
          "hello"
        ],
        "summary": "GET Hello World !",
        "description": "GET Hello World ! from HelloService",
        "operationId": "getHello",
        "responses": {
          "200": {
            "description": "Hello World message got correctly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/dir/v1/employees/{idOrEmail}": {
      "get": {
        "tags": [
          "employee-controller"
        ],
        "operationId": "getEmployee",
        "parameters": [
          {
            "name": "idOrEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/dir/v1/addresses/{idAddress}": {
      "get": {
        "tags": [
          "address-controller"
        ],
        "operationId": "getAddress",
        "parameters": [
          {
            "name": "idAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "address-controller"
        ],
        "operationId": "deleteAddress",
        "parameters": [
          {
            "name": "idAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ServiceRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "integer",
            "format": "int32"
          },
          "organisation": {
            "type": "string"
          }
        }
      },
      "RoleRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrganisationRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "service": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressRequestDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        }
      },
      "EmployeeRequestInfoDto": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Address": {
        "required": [
          "city",
          "country",
          "postalCode",
          "street"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        }
      },
      "ServiceResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "organisation": {
            "type": "string"
          },
          "employees": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RoleResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrganisationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "EmployeeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "creation": {
            "type": "string",
            "format": "date"
          },
          "enable": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "service": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "organisation": {
            "type": "string"
          },
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    }
  }
}