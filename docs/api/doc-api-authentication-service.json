{
  "openapi": "3.0.1",
  "info": {
    "title": "AuthenticationService",
    "description": "Service to register login-profiles with password and roles.<br>It allows to get Jwt token for future connections to other services<br>.BasicAuth required to get a Jwt token.",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://localhost:8041",
      "description": "API Gateway access URL"
    }
  ],
  "tags": [
    {
      "name": "hello"
    },
    {
      "name": "auth"
    },
    {
      "name": "login-profiles"
    },
    {
      "name": "roles"
    }
  ],
  "paths": {
    "/api/authentication/v1/roles/{role}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve one role permissions and activation status",
        "description": "Retrieve one role permissions and activation status, by providing its name.<br>Only available for admins.",
        "operationId": "getRoleByName",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Role permissions and activation status retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "Update a role permissions and / or activation status",
        "description": "Update a role permissions and / or activation status, by providing a list of active ones.<br>Previous ones will be deleted.<br>Only available for admins.",
        "operationId": "updateRoleByName",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Role activation status and / or permissions updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Permissions : retrieve a role information for the microservice, to know which one are available.<br>isEnable : provide a boolean to modify value (can be null to keep current value).",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/login-profiles/{idLoginProfile}": {
      "get": {
        "tags": [
          "login-profiles"
        ],
        "summary": "Retrieve one login profile roles and activations status",
        "description": "Retrieve one login profile roles and activations status, by providing its id (username).",
        "operationId": "getLoginProfileById",
        "parameters": [
          {
            "name": "idLoginProfile",
            "in": "path",
            "description": "The login profile username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Login profile not found",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Login profile roles and activations status retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginProfileResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "login-profiles"
        ],
        "summary": "Update a login profile roles and activation status",
        "description": "Update a login profile roles, by providing a list of all the new ones.<br>Previous ones will be deleted.<br>Only available for admins.",
        "operationId": "updateLoginProfileById",
        "parameters": [
          {
            "name": "idLoginProfile",
            "in": "path",
            "description": "The login-profile username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginProfileUpdateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Login profile not found",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Roles : retrieve a login profile information to know which one are available<br>isEnable : provide a boolean to modify value (can be null to keep current value).",
            "content": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Login profile activation status and / or roles updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve all role names",
        "description": "Retrieve all role names.<br>Only available for admins.",
        "operationId": "getAllRoleNames",
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Role names retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Create a new role",
        "description": "Create a new role by providing its name and microservices where it operates.<br>Information about it are available in URI given in the response header location.<br>Only available for admins.",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Name : 32 charactersMicroservices : check alias of available microservices",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Role created correctly",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/login-profiles": {
      "post": {
        "tags": [
          "login-profiles"
        ],
        "summary": "Create a new login profile",
        "description": "Create a new login profile by providing roles and email address.<br>Information about it are available in URI given in the response header location.",
        "operationId": "createLoginProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginProfileCreationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "The request body is badly structured or formatted",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Email : email standard format.<br>Roles : retrieve roles information (roles section) to know which one are available",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Login profile created correctly",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/auth/jwt": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create Jwt encrypted token ",
        "description": "Create Jwt encrypted token, by providing Basic authentication (username, password)",
        "operationId": "generateJwtToken",
        "responses": {
          "401": {
            "description": "Unauthorized to access this URL because Basis authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden to get token because of no roles are available for the authenticated login-profile",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Jwt token acquired correctly",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/login-profiles/{idLoginProfile}/password": {
      "patch": {
        "tags": [
          "login-profiles"
        ],
        "summary": "Update a login profile password",
        "description": "Update a login profile password. Only available for the login-profile itself.",
        "operationId": "updateLoginProfilePasswordById",
        "parameters": [
          {
            "name": "idLoginProfile",
            "in": "path",
            "description": "The login profile username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginProfilePasswordUpdateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Login-profile password updated correctly",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Attribute values don't respect integrity constraints.<br>Password : 12 characters, 1 uppercase letter, 1 lowercase letter, 1 digit, 1 special character in (@#$%^&+=!.*).<br>",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Authenticated login-profile cannot update an other login-profile password",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Login-profile not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/roles/{role}/activation": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve one role activation status for a microservice",
        "description": "Retrieve one role activation status for a microservice, by providing its name and the microservice alias.<br>Only available for admins.",
        "operationId": "getRoleActivationByRoleAndMicroservice",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "The role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "microservice",
            "in": "query",
            "description": "The microservice alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Role activation status not found for role and microservice provided",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Role activation status retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleActivationResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/roles/microservices": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Retrieve all role names and microservices alias",
        "description": "Retrieve all roles names and microservices alias.<br>Only available for admins.",
        "operationId": "getAllRolesAndMicroservices",
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Role names and microservices alias retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolesMicroservicesResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/authentication/v1/login-profiles/{idLoginProfile}/activation": {
      "get": {
        "tags": [
          "login-profiles"
        ],
        "summary": "Retrieve one login profile activation status",
        "description": "Retrieve one login profile activation status, by providing its id (username).",
        "operationId": "getLoginProfileActivationById",
        "parameters": [
          {
            "name": "idLoginProfile",
            "in": "path",
            "description": "The login profile username (6 characters identifier)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Roles in Jwt token are insufficient to authorize the access to this URL",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Login profile not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Login profile activation status retrieved correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginProfileActivationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/v1/hello": {
      "get": {
        "tags": [
          "hello"
        ],
        "summary": "GET Hello World !",
        "description": "GET Hello World ! from AuthService",
        "operationId": "getHello",
        "responses": {
          "200": {
            "description": "Hello message retrieved correctly",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Uncontrolled error appeared",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RoleUpdateRequestDto": {
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginProfileUpdateRequestDto": {
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RoleCreationRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "microservices": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginProfileCreationRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginProfilePasswordUpdateRequestDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      },
      "RoleResponseDto": {
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        }
      },
      "RoleActivationResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "microservice": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      },
      "RolesMicroservicesResponseDto": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "microservices": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginProfileResponseDto": {
        "type": "object",
        "properties": {
          "isEnable": {
            "type": "boolean"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          }
        }
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      },
      "LoginProfileActivationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isEnable": {
            "type": "boolean"
          }
        }
      }
    }
  }
}