version: "3.8"
services:
  postgres-procom-erp-authentication-service:
    hostname: ${DB_AUTHENTICATION_SERVICE_HOSTNAME}
    build:
      context: ${DB_AUTHENTICATION_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        DB_IMAGE: ${DB_IMAGE}
        ENTRYPOINT: ${DB_ENTRYPOINT}
    environment:
      POSTGRES_DB: ${DB_AUTHENTICATION_SERVICE_DB}
      POSTGRES_PORT: ${DB_AUTHENTICATION_SERVICE_PORT_INT}
      PGPORT: ${DB_AUTHENTICATION_SERVICE_PORT_INT}
    secrets:
      - DB_AUTHENTICATION_SERVICE_USER
      - DB_AUTHENTICATION_SERVICE_PASSWORD
    ports:
      - "${DB_AUTHENTICATION_SERVICE_PORT_EXT}:${DB_AUTHENTICATION_SERVICE_PORT_INT}"
    networks:
      - vnet-procom-erp

  postgres-procom-erp-directory-service:
    hostname: ${DB_DIRECTORY_SERVICE_HOSTNAME}
    build:
      context: ${DB_DIRECTORY_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        DB_IMAGE: ${DB_IMAGE}
        ENTRYPOINT: ${DB_ENTRYPOINT}
    environment:
      POSTGRES_DB: ${DB_DIRECTORY_SERVICE_DB}
      POSTGRES_PORT: ${DB_DIRECTORY_SERVICE_PORT_INT}
      PGPORT: ${DB_DIRECTORY_SERVICE_PORT_INT}
    secrets:
      - DB_DIRECTORY_SERVICE_USER
      - DB_DIRECTORY_SERVICE_PASSWORD
    ports:
      - "${DB_DIRECTORY_SERVICE_PORT_EXT}:${DB_DIRECTORY_SERVICE_PORT_INT}"
    networks:
      - vnet-procom-erp

  springboot-procom-erp-message-broker-service:
    hostname: ${BACKEND_MESSAGE_BROKER_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_MESSAGE_BROKER_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        RABBIT_MQ_IMAGE: ${RABBIT_MQ_IMAGE}
        BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT: ${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}
    secrets:
      - BACKEND_MESSAGE_BROKER_SERVICE_USERNAME
      - BACKEND_MESSAGE_BROKER_SERVICE_PASSWORD
      - SECURITY_JWT_SECRET_KEY
      - SECURITY_TRUST_STORE_PASSWORD
    ports:
      - "${BACKEND_MESSAGE_BROKER_SERVICE_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}"
      - "${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_INT}"
    env_file: ./.env
    networks:
      - vnet-procom-erp

  springboot-procom-erp-gateway-service:
    hostname: ${BACKEND_GATEWAY_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_GATEWAY_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        BACKEND_GATEWAY_SERVICE_PORT_INT: ${BACKEND_GATEWAY_SERVICE_PORT_INT}
        ENTRYPOINT: ${ENTRYPOINT}
        SECURITY_TRUST_STORE_PATH: ${SECURITY_TRUST_STORE_PATH}
    secrets:
      - BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_ALIAS
      - BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_PASSWORD
      - SECURITY_JWT_SECRET_KEY
      - SECURITY_JWT_CLAIMS_KEY_ROLES
      - SECURITY_SERVICES_SHARED_KEY
      - SECURITY_TRUST_STORE_PASSWORD
    ports:
      - "${BACKEND_GATEWAY_SERVICE_PORT_EXT}:${BACKEND_GATEWAY_SERVICE_PORT_INT}"
    env_file: ./.env
    networks:
      - vnet-procom-erp

  springboot-procom-erp-authentication-service:
    hostname: ${BACKEND_AUTHENTICATION_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_AUTHENTICATION_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        BACKEND_AUTHENTICATION_SERVICE_PORT_INT: ${BACKEND_AUTHENTICATION_SERVICE_PORT_INT}
        ENTRYPOINT: ${ENTRYPOINT}
        BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT: ${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}
        SECURITY_TRUST_STORE_PATH: ${SECURITY_TRUST_STORE_PATH}
    secrets:
      - DB_AUTHENTICATION_SERVICE_USER
      - DB_AUTHENTICATION_SERVICE_PASSWORD
      - BACKEND_MESSAGE_BROKER_SERVICE_USERNAME
      - BACKEND_MESSAGE_BROKER_SERVICE_PASSWORD
      - BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_ALIAS
      - BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_PASSWORD
      - SECURITY_JWT_SECRET_KEY
      - SECURITY_JWT_CLAIMS_KEY_ROLES
      - SECURITY_SERVICES_SHARED_KEY
      - SECURITY_TRUST_STORE_PASSWORD
    depends_on:
      - postgres-procom-erp-authentication-service
      - springboot-procom-erp-message-broker-service
    env_file: ./.env
    networks:
      - vnet-procom-erp

  springboot-procom-erp-directory-service:
    hostname: ${BACKEND_DIRECTORY_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_DIRECTORY_SERVICE_PATH}
      dockerfile: Dockerfile
      args:
        JAVA_IMAGE: ${JAVA_IMAGE}
        BACKEND_DIRECTORY_SERVICE_PORT_INT: ${BACKEND_DIRECTORY_SERVICE_PORT_INT}
        ENTRYPOINT: ${ENTRYPOINT}
        BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT: ${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}
        SECURITY_TRUST_STORE_PATH: ${SECURITY_TRUST_STORE_PATH}
    secrets:
      - DB_DIRECTORY_SERVICE_USER
      - DB_DIRECTORY_SERVICE_PASSWORD
      - BACKEND_MESSAGE_BROKER_SERVICE_USERNAME
      - BACKEND_MESSAGE_BROKER_SERVICE_PASSWORD
      - BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_ALIAS
      - BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_PASSWORD
      - SECURITY_JWT_SECRET_KEY
      - SECURITY_JWT_CLAIMS_KEY_ROLES
      - SECURITY_SERVICES_SHARED_KEY
      - SECURITY_TRUST_STORE_PASSWORD
    depends_on:
      - postgres-procom-erp-directory-service
      - springboot-procom-erp-message-broker-service
      - springboot-procom-erp-authentication-service
    env_file: ./.env
    networks:
      - vnet-procom-erp

networks:
  vnet-procom-erp:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_PROCOM_ERP}

secrets:
  DB_AUTHENTICATION_SERVICE_USER:
    file: ${DOCKER_SECRETS_PATH}/DB_AUTHENTICATION_SERVICE_USER.txt
  DB_AUTHENTICATION_SERVICE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/DB_AUTHENTICATION_SERVICE_PASSWORD.txt
  DB_DIRECTORY_SERVICE_USER:
    file: ${DOCKER_SECRETS_PATH}/DB_DIRECTORY_SERVICE_USER.txt
  DB_DIRECTORY_SERVICE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/DB_DIRECTORY_SERVICE_PASSWORD.txt
  BACKEND_MESSAGE_BROKER_SERVICE_USERNAME:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_MESSAGE_BROKER_SERVICE_USERNAME.txt
  BACKEND_MESSAGE_BROKER_SERVICE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_MESSAGE_BROKER_SERVICE_PASSWORD.txt
  BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_ALIAS:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_ALIAS.txt
  BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_AUTHENTICATION_SERVICE_HTTPS_KEY_STORE_PASSWORD.txt
  BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_ALIAS:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_ALIAS.txt
  BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE_PASSWORD.txt
  BACKEND_MESSAGE_BROKER_SERVICE_HTTPS_KEY_STORE_ALIAS:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_MESSAGE_BROKER_SERVICE_HTTPS_KEY_STORE_ALIAS.txt
  BACKEND_MESSAGE_BROKER_SERVICE_HTTPS_KEY_STORE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_MESSAGE_BROKER_SERVICE_HTTPS_KEY_STORE_PASSWORD.txt
  BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_ALIAS:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_ALIAS.txt
  BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/BACKEND_DIRECTORY_SERVICE_HTTPS_KEY_STORE_PASSWORD.txt
  SECURITY_JWT_SECRET_KEY:
    file: ${DOCKER_SECRETS_PATH}/SECURITY_JWT_SECRET_KEY.txt
  SECURITY_SERVICES_SHARED_KEY:
    file: ${DOCKER_SECRETS_PATH}/SECURITY_SERVICES_SHARED_KEY.txt
  SECURITY_JWT_CLAIMS_KEY_ROLES:
    file: ${DOCKER_SECRETS_PATH}/SECURITY_JWT_CLAIMS_KEY_ROLES.txt
  SECURITY_TRUST_STORE_PASSWORD:
    file: ${DOCKER_SECRETS_PATH}/SECURITY_TRUST_STORE_PASSWORD.txt
  SECURITY_TRUST_STORE_ALIAS:
    file: ${DOCKER_SECRETS_PATH}/SECURITY_TRUST_STORE_ALIAS.txt
