version: "3.8"

# +-----------------------------------------------------------------------------+
# | Services section                                                            |
# +-----------------------------------------------------------------------------+
services:
  # +---------------------------------------------------------------------------+
  # | Database containers section (mask: 10.200.1.64/26)                        |
  # +---------------------------------------------------------------------------+
  postgres-procom-erp-auth-service:
    container_name: ${DB_AUTH_SERVICE_HOSTNAME}
    hostname: ${DB_AUTH_SERVICE_HOSTNAME}
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_AUTH_SERVICE_USER}
      POSTGRES_PASSWORD: ${DB_AUTH_SERVICE_PASSWORD}
      POSTGRES_DB: ${DB_AUTH_SERVICE_DB}
    expose:
      - "${DB_AUTH_SERVICE_PORT_INT}"
    ports:
      - "${DB_AUTH_SERVICE_PORT_EXT}:${DB_AUTH_SERVICE_PORT_INT}"
    networks:
      vnet-procom-erp:
        ipv4_address: ${DB_AUTH_SERVICE_IP_INT}
    volumes:
      - db-procom-erp-auth-service-data:/var/lib/postgresql/data
      - ${DB_AUTH_SERVICE_PATH}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DB_AUTH_SERVICE_PATH}/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'

  # +-----------------------------------------------------------------------------+

  # postgres-procom-erp-local-test-service:
  #   container_name: ${DB_LOCAL_TEST_SERVICE_HOSTNAME}
  #   hostname: ${DB_LOCAL_TEST_SERVICE_HOSTNAME}
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: ${DB_LOCAL_TEST_SERVICE_USER}
  #     POSTGRES_PASSWORD: ${DB_LOCAL_TEST_SERVICE_PASSWORD}
  #     POSTGRES_DB: ${DB_LOCAL_TEST_SERVICE_DB}
  #   expose:
  #     - "${DB_LOCAL_TEST_SERVICE_PORT_INT}"
  #   ports:
  #     - "${DB_LOCAL_TEST_SERVICE_PORT_EXT}:${DB_LOCAL_TEST_SERVICE_PORT_INT}"
  #   networks:
  #     vnet-procom-erp:
  #       ipv4_address: ${DB_LOCAL_TEST_SERVICE_IP_INT}
  #   volumes:
  #     - db-procom-erp-local-test-service-data:/var/lib/postgresql/data
  #     - ${DB_LOCAL_TEST_SERVICE_PATH}/init.sql:/docker-entrypoint-initdb.d/init.sql
  #     - ${DB_LOCAL_TEST_SERVICE_PATH}/postgresql.conf:/etc/postgresql/postgresql.conf
  #   command: -c 'config_file=/etc/postgresql/postgresql.conf'
  #
  # +---------------------------------------------------------------------------+
  # | Backend containers section (mask: 10.200.1.128/26)                        |
  # +---------------------------------------------------------------------------+
  springboot-procom-erp-auth-service:
    container_name: ${BACKEND_AUTH_SERVICE_HOSTNAME}
    hostname: ${BACKEND_AUTH_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_AUTH_SERVICE_PATH}
      dockerfile: ./Dockerfile
    ports:
      - "${BACKEND_AUTH_SERVICE_PORT_EXT}:${BACKEND_AUTH_SERVICE_PORT_INT}"
    env_file: ./.env
    depends_on:
      - "postgres-procom-erp-auth-service"
      - "springboot-procom-erp-message-broker-service"
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_AUTH_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_AUTH_SERVICE_PATH}/target:/app
      - ${BACKEND_GATEWAY_SERVICE_PATH}/${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}:/${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-gateway-service:
    container_name: ${BACKEND_GATEWAY_SERVICE_HOSTNAME}
    hostname: ${BACKEND_GATEWAY_SERVICE_HOSTNAME}
    build:
      context: ${BACKEND_GATEWAY_SERVICE_PATH}
      dockerfile: ./Dockerfile
    ports:
      - "${BACKEND_GATEWAY_SERVICE_PORT_EXT}:${BACKEND_GATEWAY_SERVICE_PORT_INT}"
    env_file: ./.env
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_GATEWAY_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_GATEWAY_SERVICE_PATH}/target:/app
      - ${BACKEND_GATEWAY_SERVICE_PATH}/${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}:/${BACKEND_GATEWAY_SERVICE_HTTPS_KEY_STORE}

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-message-broker-service:
    container_name: ${BACKEND_MESSAGE_BROKER_SERVICE_HOSTNAME}
    hostname: ${BACKEND_MESSAGE_BROKER_SERVICE_HOSTNAME}
    image: "rabbitmq:3-management"
    ports:
      - "${BACKEND_MESSAGE_BROKER_SERVICE_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}"
      - "${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_INT}"
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    env_file: ./.env
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_MESSAGE_BROKER_SERVICE_IP_INT}
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  # +---------------------------------------------------------------------------+
  # | Frontend containers section (mask: 10.200.1.192/26)                       |
  # +---------------------------------------------------------------------------+

# +-----------------------------------------------------------------------------+
# | Networks section                                                            |
# +-----------------------------------------------------------------------------+
networks:
  vnet-procom-erp:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_PROCOM_ERP}

volumes:
  db-procom-erp-auth-service-data:
  #db-procom-erp-local-test-service-data:
