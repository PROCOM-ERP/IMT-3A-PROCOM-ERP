version: "3.8"

# +-----------------------------------------------------------------------------+
# | Services section                                                            |
# +-----------------------------------------------------------------------------+
services:
  # +---------------------------------------------------------------------------+
  # | Database containers section (mask: 10.200.1.64/26)                        |
  # +---------------------------------------------------------------------------+

  postgres-procom-erp-authentication-service:
    container_name: ${DB_AUTHENTICATION_SERVICE_HOSTNAME}
    hostname: ${DB_AUTHENTICATION_SERVICE_HOSTNAME}
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_AUTHENTICATION_SERVICE_USER}
      POSTGRES_PASSWORD: ${DB_AUTHENTICATION_SERVICE_PASSWORD}
      POSTGRES_DB: ${DB_AUTHENTICATION_SERVICE_DB}
    expose:
      - "${DB_AUTHENTICATION_SERVICE_PORT_INT}"
    ports:
      - "${DB_AUTHENTICATION_SERVICE_PORT_EXT}:${DB_AUTHENTICATION_SERVICE_PORT_INT}"
    networks:
      vnet-procom-erp:
        ipv4_address: ${DB_AUTHENTICATION_SERVICE_IP_INT}
    volumes:
      - db-procom-erp-authentication-service-data:/var/lib/postgresql/data
      - ${DB_AUTHENTICATION_SERVICE_PATH}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DB_AUTHENTICATION_SERVICE_PATH}/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'

  # +-----------------------------------------------------------------------------+

  postgres-procom-erp-directory-service:
    container_name: ${DB_DIRECTORY_SERVICE_HOSTNAME}
    hostname: ${DB_DIRECTORY_SERVICE_HOSTNAME}
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_DIRECTORY_SERVICE_USER}
      POSTGRES_PASSWORD: ${DB_DIRECTORY_SERVICE_PASSWORD}
      POSTGRES_DB: ${DB_DIRECTORY_SERVICE_DB}
    expose:
      - "${DB_DIRECTORY_SERVICE_PORT_INT}"
    ports:
      - "${DB_DIRECTORY_SERVICE_PORT_EXT}:${DB_DIRECTORY_SERVICE_PORT_INT}"
    networks:
      vnet-procom-erp:
        ipv4_address: ${DB_DIRECTORY_SERVICE_IP_INT}
    volumes:
      - db-procom-erp-directory-service-data:/var/lib/postgresql/data
      - ${DB_DIRECTORY_SERVICE_PATH}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DB_DIRECTORY_SERVICE_PATH}/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'

  # +-----------------------------------------------------------------------------+

  postgres-procom-erp-inventory-service:
    container_name: ${DB_INVENTORY_SERVICE_HOSTNAME}
    hostname: ${DB_INVENTORY_SERVICE_HOSTNAME}
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_INVENTORY_SERVICE_USER}
      POSTGRES_PASSWORD: ${DB_INVENTORY_SERVICE_PASSWORD}
      POSTGRES_DB: ${DB_INVENTORY_SERVICE_DB}
    expose:
      - "${DB_INVENTORY_SERVICE_PORT_INT}"
    ports:
      - "${DB_INVENTORY_SERVICE_PORT_EXT}:${DB_INVENTORY_SERVICE_PORT_INT}"
    networks:
      vnet-procom-erp:
        ipv4_address: ${DB_INVENTORY_SERVICE_IP_INT}
    volumes:
      - db-procom-erp-inventory-service-data:/var/lib/postgresql/data
      - ${DB_INVENTORY_SERVICE_PATH}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${DB_INVENTORY_SERVICE_PATH}/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'

  # +---------------------------------------------------------------------------+
  # | Backend containers section (mask: 10.200.1.128/26)                        |
  # +---------------------------------------------------------------------------+

  springboot-procom-erp-message-broker-service:
    container_name: ${BACKEND_MESSAGE_BROKER_SERVICE_HOSTNAME}
    hostname: ${BACKEND_MESSAGE_BROKER_SERVICE_HOSTNAME}
    image: "rabbitmq:3-management"
    ports:
      - "${BACKEND_MESSAGE_BROKER_SERVICE_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_PORT_INT}"
      - "${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_EXT}:${BACKEND_MESSAGE_BROKER_SERVICE_ADMIN_PORT_INT}"
    env_file: ./.env
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_MESSAGE_BROKER_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_MESSAGE_BROKER_SERVICE_PATH}/config/rabbitmq.conf:/${RABBIT_MQ_CONFIG}
      - ${SYSTEM_PATH}:/etc/rabbitmq/CA
      - ${BACKEND_MESSAGE_BROKER_SERVICE_PATH}/message-broker-service-certificate.pem:/etc/rabbitmq/certs/message-broker-service-certificate.pem
      - ${BACKEND_MESSAGE_BROKER_SERVICE_PATH}/message-broker-service-key.pem:/etc/rabbitmq/certs/message-broker-service-key.pem

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-gateway-service:
    container_name: ${BACKEND_GATEWAY_SERVICE_HOSTNAME}
    hostname: ${BACKEND_GATEWAY_SERVICE_HOSTNAME}
    image: ${JAVA_IMAGE}
    expose:
      - ${BACKEND_GATEWAY_SERVICE_PORT_INT}
    entrypoint: ${ENTRYPOINT}
    ports:
      - "${BACKEND_GATEWAY_SERVICE_PORT_EXT}:${BACKEND_GATEWAY_SERVICE_PORT_INT}"
    env_file: ./.env
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_GATEWAY_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_GATEWAY_SERVICE_PATH}/target:/app
      - ${BACKEND_GATEWAY_SERVICE_PATH}/gateway-service-keystore.p12:/certs/gateway-service-keystore.p12
      - ${SYSTEM_PATH}/../security:/certs/all
      - ${SYSTEM_PATH}:/config

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-authentication-service:
    container_name: ${BACKEND_AUTHENTICATION_SERVICE_HOSTNAME}
    hostname: ${BACKEND_AUTHENTICATION_SERVICE_HOSTNAME}
    image: ${JAVA_IMAGE}
    expose:
      - ${BACKEND_AUTHENTICATION_SERVICE_PORT_INT}
    entrypoint: ${ENTRYPOINT}
    env_file: ./.env
    depends_on:
      - "postgres-procom-erp-authentication-service"
      - "springboot-procom-erp-message-broker-service"
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_AUTHENTICATION_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_AUTHENTICATION_SERVICE_PATH}/target:/app
      - ${BACKEND_AUTHENTICATION_SERVICE_PATH}/authentication-service-keystore.p12:/certs/authentication-service-keystore.p12
      - ${SYSTEM_PATH}:/config

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-directory-service:
    container_name: ${BACKEND_DIRECTORY_SERVICE_HOSTNAME}
    hostname: ${BACKEND_DIRECTORY_SERVICE_HOSTNAME}
    image: ${JAVA_IMAGE}
    expose:
      - ${BACKEND_DIRECTORY_SERVICE_PORT_INT}
    entrypoint: ${ENTRYPOINT}
    env_file: ./.env
    depends_on:
      - "postgres-procom-erp-directory-service"
      - "springboot-procom-erp-message-broker-service"
      - "springboot-procom-erp-authentication-service"
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_DIRECTORY_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_DIRECTORY_SERVICE_PATH}/target:/app
      - ${BACKEND_DIRECTORY_SERVICE_PATH}/directory-service-keystore.p12:/certs/directory-service-keystore.p12
      - ${SYSTEM_PATH}:/config

  # +---------------------------------------------------------------------------+

  springboot-procom-erp-inventory-service:
    container_name: ${BACKEND_INVENTORY_SERVICE_HOSTNAME}
    hostname: ${BACKEND_INVENTORY_SERVICE_HOSTNAME}
    image: ${JAVA_IMAGE}
    expose:
      - ${BACKEND_INVENTORY_SERVICE_PORT_INT}
    entrypoint: ${ENTRYPOINT}
    env_file: ./.env
    depends_on:
      - "postgres-procom-erp-inventory-service"
      - "springboot-procom-erp-message-broker-service"
      - "springboot-procom-erp-authentication-service"
    networks:
      vnet-procom-erp:
        ipv4_address: ${BACKEND_INVENTORY_SERVICE_IP_INT}
    volumes:
      - ${BACKEND_INVENTORY_SERVICE_PATH}/target:/app
      - ${BACKEND_INVENTORY_SERVICE_PATH}/inventory-service-keystore.p12:/certs/inventory-service-keystore.p12
      - ${SYSTEM_PATH}:/config

  # +---------------------------------------------------------------------------+
  # | Frontend containers section (mask: 10.200.1.192/26)                       |
  # +---------------------------------------------------------------------------+

# +-----------------------------------------------------------------------------+
# | Networks section                                                            |
# +-----------------------------------------------------------------------------+
networks:
  vnet-procom-erp:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_PROCOM_ERP}

volumes:
  db-procom-erp-authentication-service-data:
  db-procom-erp-directory-service-data:
  db-procom-erp-inventory-service-data:
